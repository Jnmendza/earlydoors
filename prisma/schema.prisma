generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model SupportersGroup {
  id             String   @id(map: "supporters_group_pkey") @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  created_at     DateTime @default(now()) @db.Timestamptz(6)
  team_id        String   @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name           String
  group_logo_url String?
  city           String
  description    String
  website        String?
  ig_handle      String?
  Team           Team     @relation(fields: [team_id], references: [id], onDelete: NoAction, onUpdate: Restrict, map: "supporters_group_team_id_fkey")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model Team {
  id              String            @id(map: "teams_pkey") @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  created_at      DateTime          @default(now()) @db.Timestamptz(6)
  name            String
  logo_url        String            @default("")
  league          String
  country         String
  Event           Event[]
  SupportersGroup SupportersGroup[]
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model Venue {
  created_at          DateTime @default(now()) @db.Timestamptz(6)
  name                String
  address             String
  city                String
  lat                 Float
  lng                 Float
  website_url         String
  google_maps_url     String
  logo_url            String?
  is_active           Boolean
  has_garden          Boolean  @default(false)
  has_big_screen      Boolean  @default(false)
  has_outdoor_screens Boolean  @default(false)
  is_bookable         Boolean  @default(false)
  id                  String   @id(map: "venues_pkey") @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  zipcode             String
  state               String
  Event               Event[]
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model Event {
  id                  String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  created_at          DateTime  @default(now()) @db.Timestamptz(6)
  name                String
  description         String
  start_time          DateTime  @db.Date
  end_time            DateTime? @db.Date
  venue_id            String    @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  team_id             String?   @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  has_garden          Boolean   @default(false)
  has_big_screen      Boolean   @default(false)
  has_outdoor_screens Boolean   @default(false)
  is_bookable         Boolean   @default(false)
  Team                Team?     @relation(fields: [team_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  Venue               Venue     @relation(fields: [venue_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}
